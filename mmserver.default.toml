## Copyright 2024 Colin Marc <hi@colinmarc.com>
##
## SPDX-License-Identifier: MIT
##
## This file specifies the configuration defaults for the magic mirror server. If
## a line is commented out, the default is to leave the value unset (and the
## setting is not required, unless stated otherwise).
##
## To determine the final config, the server merges the values in this file with
## the provided configuration file (by default, /etc/magic-mirror/mmserver.toml).
##
## All configuration files may be json instead of toml.

## ***-----------------***
## *** Global Settings ***
## ***-----------------***

## If set, this special setting instructs the server to load additional application
## configurations from the given files or directories. Each file (or file in in
## the directories) should be named using the scheme `<NAME>.toml` or
## `<NAME>.json`, where `<NAME>` is the name of the application, following the
## rules outlined below. The contents should be identical to the configuration
## for an individual app.
##
# include_apps = ["/etc/magic-mirror/apps.d"]

## This determines where the server stores application data, i.e. the $HOME for
## containerized applications. If not set, then $XDG_DATA_HOME/mmserver is used,
## or $HOME/.local/share/mmserver if $XDG_DATA_HOME is not set.
##
## If you're running magic-mirror as a permanent daemon, you should set this to
## something like /var/lib/magic-mirror.
##
# data_home = /var/lib/magic-mirror

## ***-----------------***
## *** Server Settings ***
## ***-----------------***
##
## This section contains configuration options for the network server.

[server]

## Where the server should listen for incoming connections. IPv6 addresses are
## supported. Use 0.0.0.0 or [::] to listen on all available interfaces.
bind = "localhost:9599"

## If set, `bind` will be ignored, and the server will instead listen for
## incoming connections on the socket specified by the LISTEN_FDS environment
## variable. See the systemd documentation on "socket activation", here:
## https://www.freedesktop.org/software/systemd/man/latest/systemd.socket.html
bind_systemd = false

## Used for TLS. Both are required unless the host portion of the bind address
## resolves to a private address (as defined by RFCs 1918, 4193, and 6598) or
## otherwise not routable, for example 127.0.0.1, 192.168.24.25, or
## fd12:3456:789a:1::1.
# tls_key = "/path/to/tls.key"
# tls_cert = "/path/to/tls.cert"

## The number of threads to spawn for handling incoming requests.
worker_threads = 8

## The maximum number of concurrent connections the server will accept. Use `inf`
## to specify no limit.
max_connections = 4

## ***-------------------------***
## *** Configured Applications ***
## ***-------------------------***
##
## Each application you want to stream must be configured in advance. An example
## application configuration follows. (Note that unlike the rest of this file,
## this application is not included in the default configuration.)
##
## App names must be unique and only contain characters in the set [a-z0-9-_].
## The section is structured as a dictionary, with the key as the application
## name.
##
## Applications can, alternatively, be configured as individual files. See the
## documentation for `include_apps` above for more information. At least one
## application must always be configured.

## A basic app definition has a command to run. You can also specify environment
## variables to inject.
# [apps.steam-big-picture-example]
# description = "Steam's big picture mode."
# command = ["steam", "-gamepadui"]
# environment = { "FOO" = "bar" }

## Enable XWayland support for this application. This is required for any
## applications that are built for the legacy X11 windowing system, such as Steam.
# xwayland = true

## Force the app to run at 1x. This is useful for applications where you know in
## advance they don't support any UI scaling, for example any application run
## through XWayland. This setting will ensure that the app always renders at the
## full session resolution, but may result in small font sizes or other UI
## elements.
# force_1x_scale = false

## Isolate the home directory. If set, the application will see a clean,
## sandboxed $HOME (and /home/$(whoami)), rather than the system-wide one.
## This home directory is saved between runs of the app to
## `<data_home>/homes/<shared_home_name>`.
# isolate_home = true

## If `isolate_home` is set to true, this sets a name for the home directory,
## can be shared between apps. For example, multiple apps with this option set
## to 'myhome' will all see the same $HOME when they run. By default, this is
## set to the name of the application.
# shared_home_name = same as application name

## If `isolate_home` is set to true, this mounts a brand new $HOME (using tmpfs)
## each time the application is run. If set, `shared_home_name` is ignored.
##
## Note that any data saved while the app is running will be irrevocably
## destroyed when it exits.
# tmp_home = false

## ***----------------------***
## *** Default App Settings ***
## ***----------------------***
##
## This section can be used to set global defaults for all apps. Any setting here
## can be overriden in the configuration for each individual app.

[default_app_settings]
xwayland = true
force_1x_scale = false
isolate_home = true
tmp_home = false
